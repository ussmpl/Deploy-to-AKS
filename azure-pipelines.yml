

trigger:
- main

resources:
- repo: self

variables:
  imageRepo: sampleapp
  tag: '$(Build.BuildId)'

stages:
  - stage: Build
    displayName: Build image
    jobs:
    - job: Build
      displayName: Build image
      pool:
        vmImage: ubuntu-latest  

      steps:
      - task: Docker@2
        inputs:
          containerRegistry: 'mycontainer123456789'
          repository: '$(imageRepo)'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile'
          tags: |
            $(tag)
            latest

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Pipeline.Workspace)/s/kubernetes'
          artifact: 'manifests'
          publishLocation: 'pipeline'
      

  - stage: Deploy
    displayName: deploy to dev
    dependsOn: Build
    variables:
      acrsecret: k8exampleacrauth
    jobs:
    - job: deploy
      displayName: Deploy to AKS
      pool:
        vmImage: ubuntu-latest

      steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'manifests'
          targetPath: '$(Pipeline.Workspace)/manifests'

      - task: KubernetesManifest@0
        inputs:
          action: 'createSecret'
          kubernetesServiceConnection: 'mykube-pipelines-javascript-docker'
          namespace: 'Deploy-to-AKS'
          secretType: 'dockerRegistry'
          secretName: '$(acrsecret)'
          dockerRegistryEndpoint: 'mycontainer123456789'
      
      - task: KubernetesManifest@0
        inputs:
          action: 'deploy'
          kubernetesServiceConnection: 'mykube-pipelines-javascript-docker'
          namespace: 'Deploy-to-AKS'
          manifests: |
            $(Pipeline.Workspace)/manifests/deployment.yml
            $(Pipeline.Workspace)/manifests/service.yml


      